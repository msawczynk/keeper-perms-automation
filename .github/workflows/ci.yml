# GitHub Actions – CI/CD for Keeper-Perms-Automation (v2)
# ------------------------------------------------------
# Changes v2 (2025‑06‑26):
#   • Added explicit `pre-commit autoupdate --install-hooks` to avoid hook deprecation errors.
#   • Cache pre‑commit env between runs for speed.
#   • Ensured `--show-diff-on-failure` flag passes through.
#   • Minor matrix-ready structure for future Python versions.
# ------------------------------------------------------
name: keeper-perms-ci

on:
  push:
    branches: ["main"]
  pull_request:
  schedule:
    # Nightly reconcile at 02:00 UTC
    - cron: "0 2 * * *"
  workflow_dispatch:
    inputs:
      csv_path:
        description: "CSV to apply (relative path)"
        required: false
        default: "perms/template.csv"
      immutable:
        description: "Set IMMUTABLE_RECORDS=1? (yes/no)"
        required: false
        default: "yes"

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  # ---------------- LINT ----------------
  lint:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.12"]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install pre-commit
          pip install -r requirements.txt
      - name: Pre‑commit autoupdate + install hooks
        run: |
          pre-commit autoupdate --repo https://github.com/pre-commit/pre-commit-hooks
          pre-commit install-hooks
      - name: Run pre‑commit
        run: pre-commit run --all-files --show-diff-on-failure

  # -------------- DRY‑RUN ---------------
  dry-run:
    if: github.event_name == 'pull_request'
    needs: lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.12"
      - name: Install runtime deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Importer dry‑run
        env:
          KPR_VAULT:        ${{ secrets.KPR_VAULT }}
          KPR_DEVICE:       ${{ secrets.KPR_DEVICE }}
          META_FOLDER_UID:  ${{ secrets.META_FOLDER_UID }}
          LOG_FOLDER_UID:   ${{ secrets.LOG_FOLDER_UID }}
        run: python cli.py dry-run --csv perms/template.csv

  # ------------- RECONCILE --------------
  reconcile:
    if: github.event_name == 'schedule'
    needs: lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.12"
      - name: Install runtime deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Run reconcile
        env:
          KPR_VAULT:        ${{ secrets.KPR_VAULT }}
          KPR_DEVICE:       ${{ secrets.KPR_DEVICE }}
          META_FOLDER_UID:  ${{ secrets.META_FOLDER_UID }}
          LOG_FOLDER_UID:   ${{ secrets.LOG_FOLDER_UID }}
        run: python cli.py reconcile

  # --------------- APPLY ---------------
  apply:
    if: github.event_name == 'workflow_dispatch'
    needs: lint
    runs-on: ubuntu-latest
    environment:
      name: production
      url: https://keepersecurity.com
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.12"
      - name: Install runtime deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Set immutable flag in env
        run: echo "IMMUTABLE_RECORDS=${{ github.event.inputs.immutable }}" >> $GITHUB_ENV
      - name: Live apply importer
        env:
          KPR_VAULT:        ${{ secrets.KPR_VAULT }}
          KPR_DEVICE:       ${{ secrets.KPR_DEVICE }}
          META_FOLDER_UID:  ${{ secrets.META_FOLDER_UID }}
          LOG_FOLDER_UID:   ${{ secrets.LOG_FOLDER_UID }}
        run: python cli.py apply --csv ${{ github.event.inputs.csv_path }}
